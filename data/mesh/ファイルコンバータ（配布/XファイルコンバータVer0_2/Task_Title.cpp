//-----------------------------------------------------------------------------
//タイトル画面用タスク
//-----------------------------------------------------------------------------
#include "Task_Title.h"
#include "Task_Game.h"

//-----------------------------------------------------------------------------
//タスク内共有リソース
//-----------------------------------------------------------------------------
int				Title::refCnt;//消すな
DG::cImage::SP	Title::img;
void Title::ResourceLoad( )
{
	if(refCnt == 0){
		//共有リソースはここで読み込む
		//--------------------------------------------------
		img = DG::cImage::Create(_T("./data/image/Title.bmp"));
		//--------------------------------------------------
	}
	++refCnt;
}
void Title::ResourceRelease( )
{
	--refCnt;
	if(refCnt == 0){
		//共有リソースはここで解放する
		//--------------------------------------------------
		img.reset( );
		//--------------------------------------------------
	}
}
//-----------------------------------------------------------------------------
//初期化処理
//機能概要：タスク生成時に１回実行される（素材などの準備を行う）
//-----------------------------------------------------------------------------
Title::Title( ):BTask(_T("タイトル") )
{
	ResourceLoad( );//消すな

	drawPriority = 1000.0f;//描画プライオリティは低めに設定（値が大きいほど低い）
	cnt = -540; //タイトル画像の初期位置を画面外に配置する
}
//-----------------------------------------------------------------------------
//解放処理
//機能概要：タスク終了時に１回実行される（素材などの解放を行う）
//-----------------------------------------------------------------------------
Title::~Title( )
{
	ResourceRelease( );//消すな
}
//-----------------------------------------------------------------------------
//実行処理
//機能概要：ゲームの１フレームに当たる処理
//-----------------------------------------------------------------------------
void Title::Step( )
{
	if(cnt < 0){	cnt += 12;}
	if(cnt == 0){
		if(ge->in1->Check( DI::B00, DI::On) ){
			//ゲーム本編生成
			ge->PushBack( Game::Create( ) );
			Kill( );	//自身に消滅の指示を出す
		}
	}
}
//-----------------------------------------------------------------------------
//描画処理
//機能概要：描画処理を行う
//-----------------------------------------------------------------------------
void Title::Draw3D( )
{
}
void Title::Draw2D( )
{
	RECT draw = ML::Rect(0, 0, 960, 540);
	RECT src  = ML::Rect(0, 0, 240, 135);
	OffsetRect(&draw, 0, cnt);
	img->Draw(draw, src);
}
